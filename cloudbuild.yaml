steps: 
  - name: 'gcr.io/$PROJECT_ID/python-cloudbuild' 
    entrypoint: '/bin/bash'
    args: ['-c','virtualenv /workspace/venv' ]

# Creates a Python virtualenv stored in /workspace/venv that will persist across container runs.
  - name: 'gcr.io/$PROJECT_ID/python-cloudbuild'
    entrypoint: 'venv/bin/pip'
    args: ['install', '-V', '-r', 'requirements.txt']

# Installs any dependencies listed in the project's requirements.txt.

  - name: 'gcr.io/$PROJECT_ID/python-cloudbuild'
    entrypoint: 'venv/bin/python'
    args: ['-m', 'pytest' , '--cov=my_module tests','--cov-report=xml','-v']
    

# Static code Analysis
  - name: 'gcr.io/$PROJECT_ID/sonar-scanner:latest'
    args:
    - '-Dsonar.host.url=http://35.200.250.32:9000 '
    - '-Dsonar.login=sqp_64dbfde7eb298ca539c330564dbfdfa7da03992d'
    - '-Dsonar.projectKey=sonar-test'
    - '-Dsonar.sources=.'
    - '-Dsonar.python.coverage.reportPaths=coverage.xml'
